// Generated by github.com/davyxu/tabtoy
// DO NOT EDIT!!
// Version: 2.9.3
package zonecfg

type TableEnumValue struct {
	Name  string
	Index int32
}

type ZoneConfig struct {
	Zone     string   `tb_name:"区配置"`
	Key      string   `tb_name:"字段名"`
	Desc     string   `tb_name:"说明"`
	Value    string   `tb_name:"值"`
	Line     int32    `tb_name:"行"`
	NodeList []string `tb_name:"节点"`
}

// Combine struct
type Table struct {
	ZoneConfig []*ZoneConfig // table: ZoneConfig

	// Indices

	// Handlers
	postHandlers []func(*Table) error `json:"-"`
	preHandlers  []func(*Table) error `json:"-"`
}

// 注册加载后回调(用于构建数据)
func (self *Table) RegisterPostEntry(h func(*Table) error) {

	if h == nil {
		panic("empty postload handler")
	}

	self.postHandlers = append(self.postHandlers, h)
}

// 注册加载前回调(用于清除数据)
func (self *Table) RegisterPreEntry(h func(*Table) error) {

	if h == nil {
		panic("empty preload handler")
	}

	self.preHandlers = append(self.preHandlers, h)
}

// 调用PreHander，清除索引和数据
func (self *Table) ResetData() error {

	for _, h := range self.preHandlers {
		if err := h(self); err != nil {
			return err
		}
	}

	self.ZoneConfig = self.ZoneConfig[0:0]

	return nil
}

// 构建索引，调用PostHander
func (self *Table) BuildData() error {

	for _, h := range self.postHandlers {
		if err := h(self); err != nil {
			return err
		}
	}

	return nil
}

// 初始化表实例
func NewTable() *Table {

	self := &Table{}

	self.ResetData()

	return self
}

func init() {

}
